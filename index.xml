<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sun Wang&#39;s Blog</title>
    <link>http://sunwxg.github.io/</link>
    <description>Recent content on Sun Wang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://sunwxg.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Make new kernel image and install on Ubuntu</title>
      <link>http://sunwxg.github.io/post/make-kernel-image-and-install-on-ubuntu/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/make-kernel-image-and-install-on-ubuntu/</guid>
      <description>&lt;p&gt;If you want to use latest version kernel on your Ubuntu, you need to compile kernel source code by yourself. Let&amp;rsquo;s make and install it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download the latest version kernel source code from &lt;a href=&#34;https://www.kernel.org/&#34;&gt;https://www.kernel.org/&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Untar the downloaded files.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;tar xf linux-4.5.tar.xz
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Prepare &lt;code&gt;.config&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd linux-4.5
cp /boot/config-`uname -r` ./.config
make menuconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select &lt;code&gt;Load&lt;/code&gt;, load &lt;code&gt;.config&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Select &lt;code&gt;Save&lt;/code&gt;, save &lt;code&gt;.config&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Select &lt;code&gt;Exit&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make kernel image.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo make-kpkg --initrd kernel_image
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install kernel image.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i ../linux-image-4.5.0_4.5.0-10.00.Custom_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now reboot PC, system will use the new kernel.&lt;/p&gt;

&lt;p&gt;If you want to remove one kernel image package, then&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg --purge linux-image-4.5.0+
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Mount home disk by fstab file</title>
      <link>http://sunwxg.github.io/post/mount-home-disk-in-fstab/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/mount-home-disk-in-fstab/</guid>
      <description>&lt;p&gt;I want to mount disk &lt;code&gt;/dev/sda3&lt;/code&gt; to be &lt;code&gt;/home&lt;/code&gt;.
I need to add one line in &lt;code&gt;/etc/fstab&lt;/code&gt; file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find &lt;code&gt;/dev/sda3&lt;/code&gt; disk &lt;code&gt;UUID&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ lsblk -o +UUID /dev/sda3
NAME MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT UUID
sda3   8:3    0 203.1G  0 part /home      c0b3529a-c9ef-4c92-88c2-b278a7c4111b
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Add one line in &lt;code&gt;/etc/fstab&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;UUID=c0b3529a-c9ef-4c92-88c2-b278a7c4111b /home ext4 defaults,noatime 0 2
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Reboot PC.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 15.10 Sunpinyin Install</title>
      <link>http://sunwxg.github.io/post/Ubuntu-15-10-sunpinying-install/</link>
      <pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/Ubuntu-15-10-sunpinying-install/</guid>
      <description>&lt;p&gt;In Ubuntu 15.10 I use Sun Pinyin as Chinese input.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install Chinese language.
Open &lt;code&gt;System Setting&lt;/code&gt; -&amp;gt; &lt;code&gt;Language Support&lt;/code&gt;. Press &lt;code&gt;Install/Remove Languages...&lt;/code&gt;, then select &lt;code&gt;Chinese(Simplified)&lt;/code&gt;. Press &lt;code&gt;Apply Changes&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Active fcitx input frame work&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;im-config
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open &lt;code&gt;System Setting&lt;/code&gt;-&amp;gt; &lt;code&gt;Language Support&lt;/code&gt;. At &lt;code&gt;Keyboard input method system:&lt;/code&gt;, select &lt;code&gt;fcitx&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Logout and Login&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you can use &lt;code&gt;Ctrl + Space&lt;/code&gt; to switch input method between English and Chinese.&lt;/p&gt;

&lt;p&gt;Press &lt;code&gt;dash&lt;/code&gt; and input &lt;code&gt;fcitx configration&lt;/code&gt;, open fcitx configration tool to change any parameter for sun pinying, like fuzzy input.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HP ENVY13 BCM43142 Driver Install</title>
      <link>http://sunwxg.github.io/post/HP-ENVY-13-BCM43142-install/</link>
      <pubDate>Tue, 29 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/HP-ENVY-13-BCM43142-install/</guid>
      <description>

&lt;p&gt;HP ENVY13 laptop install Ubuntu 15.10, WiFi didn&amp;rsquo;t work. Use &lt;code&gt;ifconfig&lt;/code&gt; can&amp;rsquo;t see wireless card, only see lo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig
lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:2191 errors:0 dropped:0 overruns:0 frame:0
          TX packets:2191 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:191462 (191.4 KB)  TX bytes:191462 (191.4 KB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;code&gt;lspci&lt;/code&gt; can find wireless card.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ lspci |grep Network
01:00.0 Network controller: Broadcom Corporation BCM43142 802.11b/g/n (rev 01)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-driver:ce1783a100b0daa7a7d58e9ac1bda53f&#34;&gt;Install Driver&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First download BCM43142 linux driver from &lt;a href=&#34;http://broadcom.com/support/802.11&#34;&gt;http://broadcom.com/support/802.11&lt;/a&gt;. I download version 6.30.223.271.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Untar the downloaded file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;mkdir bcm
tar xzf hybrid-v35_64-nodebug-pcoem-6_30_223_271.tar.gz -C bcm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Build module.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd bcm
make API=CFG80211
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install module.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo make install
depmod
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Unload bcma module.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;blacklist bcma&amp;quot; &amp;gt;&amp;gt; /etc/modprobe.d/blacklist.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Reboot laptop&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now WiFi work well.&lt;/p&gt;

&lt;p&gt;If you meet any other problem, you can reference dirver &lt;a href=&#34;http://www.broadcom.com/docs/linux_sta/README_6.30.223.271.txt&#34;&gt;release note&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Endyptula Challenge Passed</title>
      <link>http://sunwxg.github.io/post/Eudyptula-Challenge/</link>
      <pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/Eudyptula-Challenge/</guid>
      <description>&lt;p&gt;What is Endyptula Challenge? You can get answer at &lt;a href=&#34;http://www.eudyptula-challenge.org/&#34;&gt;http://www.eudyptula-challenge.org/&lt;/a&gt;. If you want to learn linux kernel programming or linux device driver programming, I highly recommend you to finish this challenge.&lt;/p&gt;

&lt;p&gt;When we learn linux kernel programming, there are many books we can read.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Linux-Kernel-Development-Robert-Love/dp/0672329468/ref=sr_1_1?ie=UTF8&amp;amp;qid=1458812440&amp;amp;sr=8-1&amp;amp;keywords=linux+kernel+development&#34;&gt;&amp;lt;Linux Kernel Development&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Linux-Device-Drivers-3rd-Edition/dp/0596005903/ref=pd_bxgy_14_3?ie=UTF8&amp;amp;refRID=1TXM04ZY6GN1PZXPFCCF&#34;&gt;&amp;lt;Linux Device Drivers&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Understanding-Linux-Kernel-Third-Edition/dp/0596005652/ref=pd_bxgy_14_2?ie=UTF8&amp;amp;refRID=16X7YFZVM2P5F6A4RY1H&#34;&gt;&amp;lt;Understanding the Linux Kernel, Third Edition&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But for linux kernel programming, there are also many information and knowledge to understand. We always lost in these books.&lt;/p&gt;

&lt;p&gt;Eudyptula Challenge is a good guider to take you walking through the linux kernel programming forest. Create &amp;ldquo;Hello World&amp;rdquo; module, compile linux kernel source code, create real linux kernel patch and send it out&amp;hellip;&lt;/p&gt;

&lt;p&gt;From 20 tasks we can learn many useful knowledge. Like we find a way in the forest to learn linux kernel programming, we will never lost in knowledge forest.&lt;/p&gt;

&lt;p&gt;I took one year to finish this challenge. I&amp;rsquo;m number 84 to pass it.&lt;/p&gt;

&lt;p&gt;Now send email and atttend challenge, you will open the linux kernel programming door.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use libwireshark decoding PACP files</title>
      <link>http://sunwxg.github.io/post/use-libwireshark-decode-packet/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/use-libwireshark-decode-packet/</guid>
      <description>&lt;p&gt;We use Wireshark tool to decode IP packet and analyse signaling. If we want to write our own tool to decode packet, we can use libwireshark library.&lt;/p&gt;

&lt;p&gt;First do some initial work.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;init_process_policies();

epan_init(register_all_protocols, register_all_protocol_handoffs, NULL, NULL);

/* cfile is a global varible */
cap_file_init(&amp;amp;cfile);
cfile.filename = filename;

cfile.count = 0;
cfile.epan = epan_new();
cfile.epan-&amp;gt;data = &amp;amp;cfile;
cfile.epan-&amp;gt;get_frame_ts = tshark_get_frame_ts;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Second read and decode packet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;epan_dissect_t *edt;

/* all the decoded data store in struct edt */
read_packet(&amp;amp;edt);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print out packet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;/* print out as XML format */
proto_tree_write_pdml(edt, stdout);

/* print out as TEXT format */
proto_tree_print(&amp;amp;print_args, edt, print_stream);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Release memory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;epan_dissect_free(edt);
edt = NULL;

free_frame_data_sequence(cfile.frames);
cfile.frames = NULL;

wtap_close(cfile.wth);
cfile.wth = NULL;

epan_free(cfile.epan);

epan_cleanup();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My source code is on &lt;a href=&#34;https://github.com/sunwxg/decode_by_libwireshark&#34;&gt;github&lt;/a&gt;. You can follow the guide to run and debug.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jekyll add github equal blog</title>
      <link>http://sunwxg.github.io/post/jekyll-and-github/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/jekyll-and-github/</guid>
      <description>

&lt;h2 id=&#34;make-a-repository:94d627e12f394429874ffbc569f8f23a&#34;&gt;Make a Repository&lt;/h2&gt;

&lt;p&gt;Following the &lt;a href=&#34;https://pages.github.com/&#34;&gt;https://pages.github.com/&lt;/a&gt; make a repository.&lt;/p&gt;

&lt;h2 id=&#34;install-jekyll:94d627e12f394429874ffbc569f8f23a&#34;&gt;Install Jekyll&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-new-jekyll-site:94d627e12f394429874ffbc569f8f23a&#34;&gt;Create new jekyll site&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sunwxg/sunwxg.github.io.git
cd sunwxg.github.io
jekyll new .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;browse-your-blog-site:94d627e12f394429874ffbc569f8f23a&#34;&gt;Browse your blog site&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;jekyll build
jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Browse &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;change-config-yml-file:94d627e12f394429874ffbc569f8f23a&#34;&gt;Change &lt;code&gt;_config.yml&lt;/code&gt; file&lt;/h2&gt;

&lt;p&gt;Reference jekyll &lt;a href=&#34;https://jekyllrb.com/docs/configuration/&#34;&gt;manual&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;push-to-remote-repository:94d627e12f394429874ffbc569f8f23a&#34;&gt;Push to remote repository&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Browse &lt;a href=&#34;http://sunwxg.github.io&#34;&gt;http//sunwxg.github.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://sunwxg.github.io/about/</link>
      <pubDate>Sun, 22 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/about/</guid>
      <description>&lt;p&gt;Sun Wang&amp;rsquo;s blog.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/sunwxg&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:sun.wxg@gmail.com&#34;&gt;email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>