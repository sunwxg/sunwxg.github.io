<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sun Wang&#39;s Blog</title>
    <link>http://sunwxg.github.io/post/</link>
    <description>Recent content in Posts on Sun Wang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://sunwxg.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Endyptula Challenge Passed</title>
      <link>http://sunwxg.github.io/post/Eudyptula-Challenge/</link>
      <pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/Eudyptula-Challenge/</guid>
      <description>&lt;p&gt;What is Endyptula Challenge? You can get answer at &lt;a href=&#34;http://www.eudyptula-challenge.org/&#34;&gt;http://www.eudyptula-challenge.org/&lt;/a&gt;. If you want to learn linux kernel programming or linux device driver programming, I highly recommend you to finish this challenge.&lt;/p&gt;

&lt;p&gt;When we learn linux kernel programming, there are many books we can read.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Linux-Kernel-Development-Robert-Love/dp/0672329468/ref=sr_1_1?ie=UTF8&amp;amp;qid=1458812440&amp;amp;sr=8-1&amp;amp;keywords=linux+kernel+development&#34;&gt;&amp;lt;Linux Kernel Development&amp;gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Linux-Device-Drivers-3rd-Edition/dp/0596005903/ref=pd_bxgy_14_3?ie=UTF8&amp;amp;refRID=1TXM04ZY6GN1PZXPFCCF&#34;&gt;&amp;lt;Linux Device Drivers&amp;gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Understanding-Linux-Kernel-Third-Edition/dp/0596005652/ref=pd_bxgy_14_2?ie=UTF8&amp;amp;refRID=16X7YFZVM2P5F6A4RY1H&#34;&gt;&amp;lt;Understanding the Linux Kernel, Third Edition&amp;gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But for linux kernel programming, there are also many information and knowledge to understand. We always lost in these books.&lt;/p&gt;

&lt;p&gt;Eudyptula Challenge is a good guider to take you walking through the linux kernel programming forest. Create &amp;ldquo;Hello World&amp;rdquo; module, compile linux kernel source code, create real linux kernel patch and send it out&amp;hellip;&lt;/p&gt;

&lt;p&gt;From 20 tasks we can learn many useful knowledge. Like we find a way in the forest to learn linux kernel programming, we will never lost in knowledge forest.&lt;/p&gt;

&lt;p&gt;I took one year to finish this challenge. I&amp;rsquo;m number 84 to pass it.&lt;/p&gt;

&lt;p&gt;Now send email to atttend challenge, you will open the linux kernel programming door.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use libwireshark decoding PACP files</title>
      <link>http://sunwxg.github.io/post/use-libwireshark-decode-packet/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/use-libwireshark-decode-packet/</guid>
      <description>&lt;p&gt;We use Wireshark tool to decode IP packet and analyse signaling. If we want to write our own tool to decode packet, we can use libwireshark library.&lt;/p&gt;

&lt;p&gt;First do some initial work.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;init_process_policies();

epan_init(register_all_protocols, register_all_protocol_handoffs, NULL, NULL);

/* cfile is a global varible */
cap_file_init(&amp;amp;cfile);
cfile.filename = filename;

cfile.count = 0;
cfile.epan = epan_new();
cfile.epan-&amp;gt;data = &amp;amp;cfile;
cfile.epan-&amp;gt;get_frame_ts = tshark_get_frame_ts;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Second read and decode packet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;epan_dissect_t *edt;

/* all the decoded data store in struct edt */
read_packet(&amp;amp;edt);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print out packet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;/* print out as XML format */
proto_tree_write_pdml(edt, stdout);

/* print out as TEXT format */
proto_tree_print(&amp;amp;print_args, edt, print_stream);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Release memory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;epan_dissect_free(edt);
edt = NULL;

free_frame_data_sequence(cfile.frames);
cfile.frames = NULL;

wtap_close(cfile.wth);
cfile.wth = NULL;

epan_free(cfile.epan);

epan_cleanup();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My source code is on &lt;a href=&#34;https://github.com/sunwxg/decode_by_libwireshark&#34;&gt;github&lt;/a&gt;. You can follow the guide to run and debug.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jekyll add github equal blog</title>
      <link>http://sunwxg.github.io/post/jekyll-and-github/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sunwxg.github.io/post/jekyll-and-github/</guid>
      <description>

&lt;h2 id=&#34;make-a-repository:94d627e12f394429874ffbc569f8f23a&#34;&gt;Make a Repository&lt;/h2&gt;

&lt;p&gt;Following the &lt;a href=&#34;https://pages.github.com/&#34;&gt;https://pages.github.com/&lt;/a&gt; make a repository.&lt;/p&gt;

&lt;h2 id=&#34;install-jekyll:94d627e12f394429874ffbc569f8f23a&#34;&gt;Install Jekyll&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-new-jekyll-site:94d627e12f394429874ffbc569f8f23a&#34;&gt;Create new jekyll site&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sunwxg/sunwxg.github.io.git
cd sunwxg.github.io
jekyll new .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;browse-your-blog-site:94d627e12f394429874ffbc569f8f23a&#34;&gt;Browse your blog site&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;jekyll build
jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Browse &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;change-config-yml-file:94d627e12f394429874ffbc569f8f23a&#34;&gt;Change &lt;code&gt;_config.yml&lt;/code&gt; file&lt;/h2&gt;

&lt;p&gt;Reference jekyll &lt;a href=&#34;https://jekyllrb.com/docs/configuration/&#34;&gt;manual&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;push-to-remote-repository:94d627e12f394429874ffbc569f8f23a&#34;&gt;Push to remote repository&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Browse &lt;a href=&#34;http://sunwxg.github.io&#34;&gt;http//sunwxg.github.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
